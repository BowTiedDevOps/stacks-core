## Github workflow to create multiarch binaries from source

name: Create Binaries

on:
  workflow_call:
    inputs:
      tag:
        description: "Tag name of this release (x.y.z)"
        required: true
        type: string

## change the display name to the tag being built
run-name: ${{ inputs.tag }}

concurrency:
  group: create-binary-${{ github.head_ref || github.ref || github.run_id}}
  ## Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  ## Runs when the following is true:
  ##  - tag is provided
  ##  - workflow is building default branch (master)
  artifact:
    if: |
      inputs.tag != '' &&
      github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      ## Run a maximum of 13 builds concurrently, using the matrixes defined bellow
      max-parallel: 13
      matrix:
        arch:
          - linux-musl
          - linux-glibc
          - macos
          - windows
        cpu:
          - arm64
          - armv7
          - x86-64
          - x86-64-v3
        exclude:
          - arch: windows # excludes windows-arm64
            cpu: arm64
          - arch: windows # excludes windows-armv7
            cpu: armv7
          - arch: macos # excludes macos-armv7
            cpu: armv7
    env:
      TEST_TIMEOUT: 30
    steps:
      ## Call composite action
      - name: Build Binary
        id: build_binary
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT) }}
        uses: stacks-network/actions/stacks-core/create-source-binary@feat/update-release-dockerfiles
        with:
          arch: ${{ matrix.arch }}
          cpu: ${{ matrix.cpu }}
          tag: ${{ inputs.tag }}
