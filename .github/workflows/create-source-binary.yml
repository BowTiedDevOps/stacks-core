## Github workflow to create multiarch binaries from source

name: Create Binaries

on:
  workflow_call:
    inputs:
      tag:
        description: "Tag name of this release (x.y.z)"
        required: true
        type: string
      arch:
        description: "Stringified JSON object listing of platform matrix"
        required: false
        type: string
        default: >-
          ["linux-glibc-x64", "linux-musl-x64", "linux-glibc-arm64", "linux-glibc-armv7", "linux-musl-arm64", "linux-musl-armv7", "macos-x64", "macos-arm64", "windows-x64"]

## change the display name to the tag being built
run-name: ${{ inputs.tag }}

concurrency:
  group: create-binary-${{ github.head_ref || github.ref || github.run_id}}
  ## Only cancel in progress if this is for a PR
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  ## Runs when the following is true:
  ##  - tag is provided
  ##  - workflow is building default branch (master)
  artifact:
    if: |
      inputs.tag != '' && 
      github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      ## Run a maximum of 10 builds concurrently, using the matrix defined in inputs.arch
      max-parallel: 10
      matrix:
        platform: ${{ fromJson(inputs.arch) }}
    env:
      TEST_TIMEOUT: 30
    steps:
      ## Call composite action
      - name: Build Binary
        id: build_binary
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT) }}
        uses: stacks-network/actions/stacks-core/create-source-binary@main
        with:
          arch: ${{ matrix.platform }}
